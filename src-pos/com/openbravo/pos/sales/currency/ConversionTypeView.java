/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.openbravo.pos.sales.currency;

import com.openbravo.basic.BasicException;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.data.user.EditorRecord;
import com.openbravo.pos.forms.AppView;
import java.awt.Component;
import java.util.UUID;

/**
 * @author <a href="dixon.22martinez@gmail.com" >Dixon Martinez</a>
 * @see 
 *      <a href="https://github.com/dixon22ma/OpenBravoPOS_2.30.2/issues/16"> FR [16] Add window Conversion Type</a>      
 */
public final class ConversionTypeView extends javax.swing.JPanel implements EditorRecord{

    /** ID Conversion Type         */
    private Object m_ConversionType_ID;
    
    /**
     * Creates new form ConversionTypeView
     */
    public ConversionTypeView() {
        initComponents();
    }
    
    /**
     * Creates new form ConversionTypeView
     * @param m_AppView
     * @param m_Dirty 
     */
    public ConversionTypeView(AppView m_AppView, DirtyManager m_Dirty ) {
        this();
        
        jTxtValue.getDocument().addDocumentListener(m_Dirty);
        jTxtName.getDocument().addDocumentListener(m_Dirty);
        jTADesc.getDocument().addDocumentListener(m_Dirty);
        jCBIsActive.addActionListener(m_Dirty);
        jCBIsDefault.addActionListener(m_Dirty);
        
        writeValueEOF();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTxtValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTxtName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTADesc = new javax.swing.JTextArea();
        jCBIsActive = new javax.swing.JCheckBox();
        jCBIsDefault = new javax.swing.JCheckBox();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pos_messages"); // NOI18N
        jLabel1.setText(bundle.getString("Label.Value")); // NOI18N

        jLabel2.setText(bundle.getString("Label.Name")); // NOI18N

        jLabel3.setText(bundle.getString("Label.Description")); // NOI18N

        jTADesc.setColumns(20);
        jTADesc.setRows(5);
        jScrollPane2.setViewportView(jTADesc);

        jCBIsActive.setText(bundle.getString("Label.IsActive")); // NOI18N

        jCBIsDefault.setText(bundle.getString("label.IsDefault")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                    .addComponent(jCBIsActive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBIsDefault)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTxtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                        .addComponent(jTxtName)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBIsActive)
                    .addComponent(jCBIsDefault))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void writeValueEOF() {
        initDefaultComponents(null);
        enableComponents(false);
    }

    @Override
    public void writeValueInsert() {
        initDefaultComponents(null);
        enableComponents(true);
    }

    @Override
    public void writeValueEdit(Object value) {
        Object[] conversionType = (Object[]) value;
        m_ConversionType_ID = conversionType[0];
        jTxtValue.setText(conversionType[1].toString());
        jTxtName.setText((String)conversionType[2]);
        jTADesc.setText((String)conversionType[3]);
        jCBIsActive.setSelected(conversionType[4].equals("Y"));
        jCBIsDefault.setSelected(conversionType[5].equals("Y"));
        
        enableComponents(true);
    }

    @Override
    public void writeValueDelete(Object value) {
        Object[] conversionType = (Object[]) value;
        m_ConversionType_ID = conversionType[0];
        jTxtValue.setText(conversionType[1].toString());
        jTxtName.setText((String)conversionType[2]);
        jTADesc.setText((String)conversionType[3]);
        jCBIsActive.setSelected(conversionType[4].equals("Y"));
        jCBIsDefault.setSelected(conversionType[5].equals("Y"));
        enableComponents(false);
    }

    @Override
    public void refresh() {
        
    }

    @Override
    public Component getComponent() {
        return this;
    }

    @Override
    public Object createValue() throws BasicException {
        Object[] conversionType = new Object[6];
        conversionType[0] = m_ConversionType_ID == null ? UUID.randomUUID().toString() : m_ConversionType_ID; 
        conversionType[1] = jTxtValue.getText();
        conversionType[2] = jTxtName.getText();
        conversionType[3] = jTADesc.getText();
        conversionType[4] = jCBIsActive.isSelected() ? "Y" : "N";
        conversionType[5] = jCBIsActive.isSelected() ? "Y" : "N";
        
        return conversionType;
        
    }

    /**
     * 
     * @param value 
     */
    private void initDefaultComponents(String value) {
        m_ConversionType_ID = value;
        jTxtValue.setText(value);
        jTxtName.setText(value);
        jTADesc.setText(value);
        jCBIsActive.setSelected(true);
        jCBIsDefault.setSelected(false);
    }
    
    /**
     * 
     * @param value 
     */
    private void enableComponents(boolean value) {
        jTxtValue.setEnabled(value);
        jTxtName.setEnabled(value);
        jTADesc.setEnabled(value);
        jCBIsActive.setEnabled(value);
        jCBIsDefault.setEnabled(value);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCBIsActive;
    private javax.swing.JCheckBox jCBIsDefault;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTADesc;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTxtName;
    private javax.swing.JTextField jTxtValue;
    // End of variables declaration//GEN-END:variables
}
